{"mappings":"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","sources":["js/snake.js"],"sourcesContent":["const playBoard = document.querySelector(\".play-board\");\nconst scoreElement = document.querySelector(\".score\");\nconst highScoreElement = document.querySelector(\".high-score\");\nconst controls = document.querySelectorAll(\".controls i\");\nlet gameOver = false;\nlet foodX, foodY;\nlet snakeX = 5, snakeY = 5;\nlet velocityX = 0, velocityY = 0;\nlet snakeBody = [];\nlet setIntervalId;\nlet score = 0;\n// Getting high score from the local storage\nlet highScore = localStorage.getItem(\"high-score\") || 0;\nhighScoreElement.innerText = `Рекорд: ${highScore}`;\nconst updateFoodPosition = () => {\n    // Passing a random 1 - 30 value as food position\n    foodX = Math.floor(Math.random() * 30) + 1;\n    foodY = Math.floor(Math.random() * 30) + 1;\n}\nconst handleGameOver = () => {\n    // Clearing the timer and reloading the page on game over\n    clearInterval(setIntervalId);\n    alert(\"Ви програли! Натисніть щоб почати заново...\");\n    location.reload();\n}\nconst changeDirection = e => {\n    // Changing velocity value based on key press\n    if(e.key === \"ArrowUp\" && velocityY != 1) {\n        velocityX = 0;\n        velocityY = -1;\n    } else if(e.key === \"ArrowDown\" && velocityY != -1) {\n        velocityX = 0;\n        velocityY = 1;\n    } else if(e.key === \"ArrowLeft\" && velocityX != 1) {\n        velocityX = -1;\n        velocityY = 0;\n    } else if(e.key === \"ArrowRight\" && velocityX != -1) {\n        velocityX = 1;\n        velocityY = 0;\n    }\n}\n// Calling changeDirection on each key click and passing key dataset value as an object\ncontrols.forEach(button => button.addEventListener(\"click\", () => changeDirection({ key: button.dataset.key })));\nconst initGame = () => {\n    if(gameOver) return handleGameOver();\n    let html = `<div class=\"food\" style=\"grid-area: ${foodY} / ${foodX}\"></div>`;\n    // Checking if the snake hit the food\n    if(snakeX === foodX && snakeY === foodY) {\n        updateFoodPosition();\n        snakeBody.push([foodY, foodX]); // Pushing food position to snake body array\n        score++; // increment score by 1\n        highScore = score >= highScore ? score : highScore;\n        localStorage.setItem(\"high-score\", highScore);\n        scoreElement.innerText = `Рахунок: ${score}`;\n        highScoreElement.innerText = `Рекорд: ${highScore}`;\n    }\n    // Updating the snake's head position based on the current velocity\n    snakeX += velocityX;\n    snakeY += velocityY;\n    \n    // Shifting forward the values of the elements in the snake body by one\n    for (let i = snakeBody.length - 1; i > 0; i--) {\n        snakeBody[i] = snakeBody[i - 1];\n    }\n    snakeBody[0] = [snakeX, snakeY]; // Setting first element of snake body to current snake position\n    // Checking if the snake's head is out of wall, if so setting gameOver to true\n    if(snakeX <= 0 || snakeX > 30 || snakeY <= 0 || snakeY > 30) {\n        return gameOver = true;\n    }\n    for (let i = 0; i < snakeBody.length; i++) {\n        // Adding a div for each part of the snake's body\n        html += `<div class=\"head\" style=\"grid-area: ${snakeBody[i][1]} / ${snakeBody[i][0]}\"></div>`;\n        // Checking if the snake head hit the body, if so set gameOver to true\n        if (i !== 0 && snakeBody[0][1] === snakeBody[i][1] && snakeBody[0][0] === snakeBody[i][0]) {\n            gameOver = true;\n        }\n    }\n    playBoard.innerHTML = html;\n}\nupdateFoodPosition();\nsetIntervalId = setInterval(initGame, 100);\ndocument.addEventListener(\"keyup\", changeDirection);\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    // Отримайте елемент кнопки back-to-games\n    var backButton = document.querySelector('.back-to-games button');\n\n    // Додайте слухач подій кліку для кнопки\n    backButton.addEventListener('click', function () {\n      // Закрийте поточне вікно\n      window.close();\n    });\n  });"],"names":[],"version":3,"file":"snake.72ac3200.js.map","sourceRoot":"/__parcel_source_root/"}