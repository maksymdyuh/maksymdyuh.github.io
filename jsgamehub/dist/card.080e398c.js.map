{"mappings":"ICWI,EAAS,EAAS,EAXtB,MAAM,EAAQ,SAAS,gBAAgB,CAAC,SACxC,EAAU,SAAS,aAAa,CAAC,WACjC,EAAW,SAAS,aAAa,CAAC,YAClC,EAAa,SAAS,aAAa,CAAC,mBAGpC,IAAI,EADU,GAEV,EAAQ,EACR,EAAc,EACd,EAAc,CAAA,EACd,EAAY,CAAA,EAGhB,SAAS,IACL,GAAG,GAAY,EACX,OAAO,cAAc,EAGzB,CAAA,EAAQ,SAAS,GAAG,CACxB,CAEA,SAAS,EAAS,CAAC,OAAQ,CAAW,CAAC,EAKnC,GAJI,IACA,EAAY,CAAA,EACZ,EAAQ,YAAY,EAAW,MAEhC,IAAgB,GAAW,CAAC,GAAe,EAAW,EAAG,CAIxD,GAFA,EAAS,SAAS,GAAG,EACrB,EAAY,SAAS,CAAC,GAAG,CAAC,QACvB,CAAC,EACA,OAAO,EAAU,EAErB,EAAU,EACV,EAAc,CAAA,EAGd,AAIR,SAAoB,CAAI,CAAE,CAAI,EAC1B,GAAG,IAAS,SAER,AAAG,AAAe,KAAf,GAAoB,EAAW,EACvB,cAAc,IAEzB,EAAQ,mBAAmB,CAAC,QAAS,GACrC,EAAQ,mBAAmB,CAAC,QAAS,GACrC,EAAU,EAAU,GACb,EAAc,CAAA,GAGzB,WAAW,KACP,EAAQ,SAAS,CAAC,GAAG,CAAC,SACtB,EAAQ,SAAS,CAAC,GAAG,CAAC,QAC1B,EAAG,KAEH,WAAW,KACP,EAAQ,SAAS,CAAC,MAAM,CAAC,QAAS,QAClC,EAAQ,SAAS,CAAC,MAAM,CAAC,QAAS,QAClC,EAAU,EAAU,GACpB,EAAc,CAAA,CAClB,EAAG,KACP,EA7ByB,EAAQ,aAAa,CAAC,kBAAkB,GAAG,CAC/C,EAAQ,aAAa,CAAC,kBAAkB,GAAG,CAE5D,CACJ,CA2BA,SAAS,IACL,EA9DU,GA+DV,EAAQ,EAAc,EACtB,EAAU,EAAU,GACpB,cAAc,GACd,EAAQ,SAAS,CAAG,EACpB,EAAS,SAAS,CAAG,EACrB,EAAc,EAAY,CAAA,EAE1B,IAAI,EAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAE,CAC9C,EAAI,IAAI,CAAC,IAAM,KAAK,MAAM,GAAK,GAAM,EAAI,IAEzC,EAAM,OAAO,CAAC,CAAC,EAAM,KACjB,EAAK,SAAS,CAAC,MAAM,CAAC,QACtB,IAAI,EAAS,EAAK,aAAa,CAAC,kBAChC,WAAW,KACP,EAAO,GAAG,CAAG,CAAC,QAAQ,EAAE,CAAG,CAAC,EAAM,CAAC,IAAI,CAAC,AAC5C,EAAG,KACH,EAAK,gBAAgB,CAAC,QAAS,EACnC,EACJ,CAEA,IAEA,EAAW,gBAAgB,CAAC,QAAS,GAErC,EAAM,OAAO,CAAC,AAAA,IACV,EAAK,gBAAgB,CAAC,QAAS,EACnC,GAEA,SAAS,gBAAgB,CAAC,mBAAoB,WAK1C,AAHiB,SAAS,aAAa,CAAC,yBAG7B,gBAAgB,CAAC,QAAS,WAEnC,OAAO,KAAK,EACd,EACF","sources":["<anon>","js/card.js"],"sourcesContent":["const cards = document.querySelectorAll(\".card\"), timeTag = document.querySelector(\".time b\"), flipsTag = document.querySelector(\".flips b\"), refreshBtn = document.querySelector(\".details button\");\nlet maxTime = 35;\nlet timeLeft = maxTime;\nlet flips = 0;\nlet matchedCard = 0;\nlet disableDeck = false;\nlet isPlaying = false;\nlet cardOne, cardTwo, timer;\nfunction initTimer() {\n    if (timeLeft <= 0) return clearInterval(timer);\n    timeLeft--;\n    timeTag.innerText = timeLeft;\n}\nfunction flipCard({ target: clickedCard }) {\n    if (!isPlaying) {\n        isPlaying = true;\n        timer = setInterval(initTimer, 1000);\n    }\n    if (clickedCard !== cardOne && !disableDeck && timeLeft > 0) {\n        flips++;\n        flipsTag.innerText = flips;\n        clickedCard.classList.add(\"flip\");\n        if (!cardOne) return cardOne = clickedCard;\n        cardTwo = clickedCard;\n        disableDeck = true;\n        let cardOneImg = cardOne.querySelector(\".back-view img\").src, cardTwoImg = cardTwo.querySelector(\".back-view img\").src;\n        matchCards(cardOneImg, cardTwoImg);\n    }\n}\nfunction matchCards(img1, img2) {\n    if (img1 === img2) {\n        matchedCard++;\n        if (matchedCard == 6 && timeLeft > 0) return clearInterval(timer);\n        cardOne.removeEventListener(\"click\", flipCard);\n        cardTwo.removeEventListener(\"click\", flipCard);\n        cardOne = cardTwo = \"\";\n        return disableDeck = false;\n    }\n    setTimeout(()=>{\n        cardOne.classList.add(\"shake\");\n        cardTwo.classList.add(\"shake\");\n    }, 400);\n    setTimeout(()=>{\n        cardOne.classList.remove(\"shake\", \"flip\");\n        cardTwo.classList.remove(\"shake\", \"flip\");\n        cardOne = cardTwo = \"\";\n        disableDeck = false;\n    }, 1200);\n}\nfunction shuffleCard() {\n    timeLeft = maxTime;\n    flips = matchedCard = 0;\n    cardOne = cardTwo = \"\";\n    clearInterval(timer);\n    timeTag.innerText = timeLeft;\n    flipsTag.innerText = flips;\n    disableDeck = isPlaying = false;\n    let arr = [\n        1,\n        2,\n        3,\n        4,\n        5,\n        6,\n        1,\n        2,\n        3,\n        4,\n        5,\n        6\n    ];\n    arr.sort(()=>Math.random() > 0.5 ? 1 : -1);\n    cards.forEach((card, index)=>{\n        card.classList.remove(\"flip\");\n        let imgTag = card.querySelector(\".back-view img\");\n        setTimeout(()=>{\n            imgTag.src = `img/img-${arr[index]}.png`;\n        }, 500);\n        card.addEventListener(\"click\", flipCard);\n    });\n}\nshuffleCard();\nrefreshBtn.addEventListener(\"click\", shuffleCard);\ncards.forEach((card)=>{\n    card.addEventListener(\"click\", flipCard);\n});\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Отримайте елемент кнопки back-to-games\n    var backButton = document.querySelector('.back-to-games button');\n    // Додайте слухач подій кліку для кнопки\n    backButton.addEventListener('click', function() {\n        // Закрийте поточне вікно\n        window.close();\n    });\n});\n\n//# sourceMappingURL=card.080e398c.js.map\n","const cards = document.querySelectorAll(\".card\"),\r\ntimeTag = document.querySelector(\".time b\"),\r\nflipsTag = document.querySelector(\".flips b\"),\r\nrefreshBtn = document.querySelector(\".details button\");\r\n\r\nlet maxTime = 35;\r\nlet timeLeft = maxTime;\r\nlet flips = 0;\r\nlet matchedCard = 0;\r\nlet disableDeck = false;\r\nlet isPlaying = false;\r\nlet cardOne, cardTwo, timer;\r\n\r\nfunction initTimer() {\r\n    if(timeLeft <= 0) {\r\n        return clearInterval(timer);\r\n    }\r\n    timeLeft--;\r\n    timeTag.innerText = timeLeft;\r\n}\r\n\r\nfunction flipCard({target: clickedCard}) {\r\n    if(!isPlaying) {\r\n        isPlaying = true;\r\n        timer = setInterval(initTimer, 1000);\r\n    }\r\n    if(clickedCard !== cardOne && !disableDeck && timeLeft > 0) {\r\n        flips++;\r\n        flipsTag.innerText = flips;\r\n        clickedCard.classList.add(\"flip\");\r\n        if(!cardOne) {\r\n            return cardOne = clickedCard;\r\n        }\r\n        cardTwo = clickedCard;\r\n        disableDeck = true;\r\n        let cardOneImg = cardOne.querySelector(\".back-view img\").src,\r\n        cardTwoImg = cardTwo.querySelector(\".back-view img\").src;\r\n        matchCards(cardOneImg, cardTwoImg);\r\n    }\r\n}\r\n\r\nfunction matchCards(img1, img2) {\r\n    if(img1 === img2) {\r\n        matchedCard++;\r\n        if(matchedCard == 6 && timeLeft > 0) {\r\n            return clearInterval(timer);\r\n        }\r\n        cardOne.removeEventListener(\"click\", flipCard);\r\n        cardTwo.removeEventListener(\"click\", flipCard);\r\n        cardOne = cardTwo = \"\";\r\n        return disableDeck = false;\r\n    }\r\n\r\n    setTimeout(() => {\r\n        cardOne.classList.add(\"shake\");\r\n        cardTwo.classList.add(\"shake\");\r\n    }, 400);\r\n\r\n    setTimeout(() => {\r\n        cardOne.classList.remove(\"shake\", \"flip\");\r\n        cardTwo.classList.remove(\"shake\", \"flip\");\r\n        cardOne = cardTwo = \"\";\r\n        disableDeck = false;\r\n    }, 1200);\r\n}\r\n\r\nfunction shuffleCard() {\r\n    timeLeft = maxTime;\r\n    flips = matchedCard = 0;\r\n    cardOne = cardTwo = \"\";\r\n    clearInterval(timer);\r\n    timeTag.innerText = timeLeft;\r\n    flipsTag.innerText = flips;\r\n    disableDeck = isPlaying = false;\r\n\r\n    let arr = [1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6];\r\n    arr.sort(() => Math.random() > 0.5 ? 1 : -1);\r\n\r\n    cards.forEach((card, index) => {\r\n        card.classList.remove(\"flip\");\r\n        let imgTag = card.querySelector(\".back-view img\");\r\n        setTimeout(() => {\r\n            imgTag.src = `img/img-${arr[index]}.png`;\r\n        }, 500);\r\n        card.addEventListener(\"click\", flipCard);\r\n    });\r\n}\r\n\r\nshuffleCard();\r\n\r\nrefreshBtn.addEventListener(\"click\", shuffleCard);\r\n\r\ncards.forEach(card => {\r\n    card.addEventListener(\"click\", flipCard);\r\n});\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    // Отримайте елемент кнопки back-to-games\r\n    var backButton = document.querySelector('.back-to-games button');\r\n\r\n    // Додайте слухач подій кліку для кнопки\r\n    backButton.addEventListener('click', function () {\r\n      // Закрийте поточне вікно\r\n      window.close();\r\n    });\r\n  });"],"names":["cardOne","cardTwo","timer","cards","document","querySelectorAll","timeTag","querySelector","flipsTag","refreshBtn","timeLeft","flips","matchedCard","disableDeck","isPlaying","initTimer","clearInterval","innerText","flipCard","target","clickedCard","setInterval","classList","add","matchCards","img1","img2","removeEventListener","setTimeout","remove","src","shuffleCard","arr","sort","Math","random","forEach","card","index","imgTag","addEventListener","backButton","window","close"],"version":3,"file":"card.080e398c.js.map"}